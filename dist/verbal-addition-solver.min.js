(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.VerbalAdditionSolver = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
class State{constructor({notZero:a=[],expressions:b=[],answer:c=[],unused:d=[0,1,2,3,4,5,6,7,8,9]}={}){this._notZero=new Set(a),this._expressions=b.map(({moveUp:a,terms:b,sum:c})=>({moveUp:a,terms:[...b],sum:c})),this._answer=new Map(c),this._unused=new Set(d)}get notZero(){return this._notZero}get expressions(){return this._expressions}get answer(){return this._answer}get unused(){return this._unused}}const checkExpressions=a=>{const{expressions:b,answer:c}=a;for(;b.length;){const{moveUp:a,terms:d,sum:e}=b[b.length-1];if(!c.has(e))return!0;if(d.find(a=>!c.has(a)))return!0;const f=d.reduce((a,b)=>a+c.get(b),a);if(f%10!==c.get(e))return!1;if(b.pop(),0===b.length)return 10>f;b[b.length-1].moveUp=~~(f/10)}return!0},getKeys=a=>{const b=new Set,{expressions:c}=a;for(let d=c.length-1;0<=d;d--){const a=c[d];a.terms.forEach(a=>b.add(a)),b.add(a.sum)}return[...b]},search=function*(a){const b=getKeys(a),c=[{state:a,depth:0}];for(;c.length;){const{state:a,depth:d}=c.pop();if(!checkExpressions(a))continue;if(d>=b.length){yield a.answer;continue}const e=b[d],f=a.notZero.has(e);a.unused.forEach(b=>{if(!(f&&0===b)){const f=new State(a);f.answer.set(e,b),f.unused.delete(b),c.push({state:f,depth:d+1})}})}};module.exports=class{static*solve(...a){const b=[...a],c=b.pop(),d=c.length;if(b.find(a=>a.length>d))return;const e=new State;[...a].forEach(a=>e.notZero.add(a[0]));for(let f=0;f<d;f++){const a=[];b.forEach(b=>{b.length<d-f||a.push(b[f+b.length-d])}),e.expressions.push({moveUp:f==d-1?0:null,terms:a,sum:c[f]})}for(const b of search(e))yield[...a].map(a=>+[...a].map(a=>b.get(a)).join(""))}static get VERSION(){return"0.0.1"}};

},{}]},{},[1])(1)
});
